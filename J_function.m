function [J] = J_function(Cdat,c2v,pair_index,pair)

%%
%t = cputime;
n = size(c2v,1); %number of cells
m = size(c2v,2); %number of vertices

J = zeros(2*n,2*m);
%J = sparse(J);

%cells = find(Cdat(:,5)==0);
%bcells = find(Cdat(:,5)==1);
%t = cputime;
for ii = 1:m
    if ismember(ii,pair_index) %%check for boundary cells
        %t = cputime;
        pv = find(pair_index(:) == ii);
        pcells = pair(pv).cells_p;
        pi = pair(pv).cells_i;
        if size(pi,1)>1 %%check for the number of triangles
 
            for kk = 1:size(pi,1)
                pcells2 = pcells(:,2*(kk-1)+1:2*(kk-1)+2);
                pi2 = pi(kk,:);
                for jj = 1:3
                    ri = [pcells2(1,jj);pcells2(2,jj)];
                    two_cells = setdiff([1,2,3],jj);
                    rj = [pcells2(1,two_cells(1));pcells2(2,two_cells(1))];
                    rk = [pcells2(1,two_cells(2));pcells2(2,two_cells(2))];
                    
                    
                    %domega_temp = J_func(ri(1),ri(2),rj(1),rj(2),rk(1),rk(2));
                    i1 = ri(1);
                    i2 = ri(2);
                    j1 = rj(1);
                    j2 = rj(2);
                    k1 = rk(1);
                    k2 = rk(2);
                    
                    D = 2*((i1 - j1)*(j2 - k2) - (i2 - j2)*(j1 - k1))^2;
                    %if D>1
                    domega_temp = [((j2 - k2)*(i1^2*j2 - i1^2*k2 - 2*i1*i2*j1 + 2*i1*i2*k1 + 2*i1*j1*k2 - 2*i1*j2*k1 - i2^2*j2 + i2^2*k2 + i2*j1^2 + i2*j2^2 - i2*k1^2 - i2*k2^2 - j1^2*k2 - j2^2*k2 + j2*k1^2 + j2*k2^2))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2),...
                        -((j1 - k1)*(i1^2*j2 - i1^2*k2 - 2*i1*i2*j1 + 2*i1*i2*k1 + 2*i1*j1*k2 - 2*i1*j2*k1 - i2^2*j2 + i2^2*k2 + i2*j1^2 + i2*j2^2 - i2*k1^2 - i2*k2^2 - j1^2*k2 - j2^2*k2 + j2*k1^2 + j2*k2^2))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2);...
                        -((j2 - k2)*(- i1^2*j1 + i1^2*k1 - 2*i1*i2*j2 + 2*i1*i2*k2 + i1*j1^2 + i1*j2^2 - i1*k1^2 - i1*k2^2 + i2^2*j1 - i2^2*k1 - 2*i2*j1*k2 + 2*i2*j2*k1 - j1^2*k1 + j1*k1^2 + j1*k2^2 - j2^2*k1))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2),...
                        ((j1 - k1)*(- i1^2*j1 + i1^2*k1 - 2*i1*i2*j2 + 2*i1*i2*k2 + i1*j1^2 + i1*j2^2 - i1*k1^2 - i1*k2^2 + i2^2*j1 - i2^2*k1 - 2*i2*j1*k2 + 2*i2*j2*k1 - j1^2*k1 + j1*k1^2 + j1*k2^2 - j2^2*k1))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2)];
                    %end
                    
                    %domega_temp = [(0.5*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*k1*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j1*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i1*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*k1)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (1.0*k1*(j2 - 1.0*k2)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (j1*(j2 - 1.0*k2)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*i1*(j2 - 1.0*k2)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3, (0.5*k2*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j2*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i2*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*k1)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (1.0*k2*(j2 - 1.0*k2)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (j2*(j2 - 1.0*k2)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*i2*(j2 - 1.0*k2)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3; ...
                    %               (0.5*k1*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*j2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*j2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j1*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*k2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*k2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i1*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (k1*(j1 - 1.0*k1)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*j1*(j1 - 1.0*k1)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (i1*(j1 - 1.0*k1)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3,  (0.5*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*k2*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*j2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*j2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j2*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*k2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*k2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i2*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (k2*(j1 - 1.0*k1)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*j2*(j1 - 1.0*k1)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (i2*(j1 - 1.0*k1)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3];
                    
                    
                    
                    
                    
                    J(pi2(jj),ii) = domega_temp(1,1);
                    J(pi2(jj),m+ii) = domega_temp(1,2);
                    J(n+pi2(jj),ii) = domega_temp(2,1);
                    J(n+pi2(jj),m+ii) = domega_temp(2,2);
                end
            end
            
        else
            for jj = 1:3
                ri = [pcells(1,jj);pcells(2,jj)];
                two_cells = setdiff([1,2,3],jj);
                rj = [pcells(1,two_cells(1));pcells(2,two_cells(1))];
                rk = [pcells(1,two_cells(2));pcells(2,two_cells(2))];
                
                
                %domega_temp = J_func(ri(1),ri(2),rj(1),rj(2),rk(1),rk(2));
                i1 = ri(1);
                i2 = ri(2);
                j1 = rj(1);
                j2 = rj(2);
                k1 = rk(1);
                k2 = rk(2);
                
                D = 2*((i1 - j1)*(j2 - k2) - (i2 - j2)*(j1 - k1))^2;
                %if D>1
                domega_temp = [((j2 - k2)*(i1^2*j2 - i1^2*k2 - 2*i1*i2*j1 + 2*i1*i2*k1 + 2*i1*j1*k2 - 2*i1*j2*k1 - i2^2*j2 + i2^2*k2 + i2*j1^2 + i2*j2^2 - i2*k1^2 - i2*k2^2 - j1^2*k2 - j2^2*k2 + j2*k1^2 + j2*k2^2))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2),...
                    -((j1 - k1)*(i1^2*j2 - i1^2*k2 - 2*i1*i2*j1 + 2*i1*i2*k1 + 2*i1*j1*k2 - 2*i1*j2*k1 - i2^2*j2 + i2^2*k2 + i2*j1^2 + i2*j2^2 - i2*k1^2 - i2*k2^2 - j1^2*k2 - j2^2*k2 + j2*k1^2 + j2*k2^2))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2);...
                    -((j2 - k2)*(- i1^2*j1 + i1^2*k1 - 2*i1*i2*j2 + 2*i1*i2*k2 + i1*j1^2 + i1*j2^2 - i1*k1^2 - i1*k2^2 + i2^2*j1 - i2^2*k1 - 2*i2*j1*k2 + 2*i2*j2*k1 - j1^2*k1 + j1*k1^2 + j1*k2^2 - j2^2*k1))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2),...
                    ((j1 - k1)*(- i1^2*j1 + i1^2*k1 - 2*i1*i2*j2 + 2*i1*i2*k2 + i1*j1^2 + i1*j2^2 - i1*k1^2 - i1*k2^2 + i2^2*j1 - i2^2*k1 - 2*i2*j1*k2 + 2*i2*j2*k1 - j1^2*k1 + j1*k1^2 + j1*k2^2 - j2^2*k1))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2)];
                %end
                
                %domega_temp = [(0.5*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*k1*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j1*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i1*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*k1)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (1.0*k1*(j2 - 1.0*k2)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (j1*(j2 - 1.0*k2)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*i1*(j2 - 1.0*k2)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3, (0.5*k2*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j2*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i2*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*k1)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (1.0*k2*(j2 - 1.0*k2)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (j2*(j2 - 1.0*k2)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*i2*(j2 - 1.0*k2)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3; ...
                %               (0.5*k1*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*j2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*j2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j1*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*k2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*k2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i1*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (k1*(j1 - 1.0*k1)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*j1*(j1 - 1.0*k1)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (i1*(j1 - 1.0*k1)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3,  (0.5*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*k2*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*j2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*j2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j2*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*k2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*k2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i2*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (k2*(j1 - 1.0*k1)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*j2*(j1 - 1.0*k1)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (i2*(j1 - 1.0*k1)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3];
                
                
                
                
                
                J(pi(jj),ii) = domega_temp(1,1);
                J(pi(jj),m+ii) = domega_temp(1,2);
                J(n+pi(jj),ii) = domega_temp(2,1);
                J(n+pi(jj),m+ii) = domega_temp(2,2);
            end
        end
        %fprintf('J_functions boundary vertices runtime: %f\n',cputime-t)
    else
        three_cells = find(c2v(:,ii));
        if length(three_cells) > 3 %%check for number of neighbor cells
            
            %inc = randperm(length(three_cells),3);
            %three_cells = three_cells(inc);
            %error('this vertex connects with more than 3 cells');
            tri = delaunay(Cdat(three_cells,1),Cdat(three_cells,2));           
            for kk = 1:size(tri,1)
                three_cells2 = three_cells(tri(kk,:));
                for jj = 1:3
                    
                    ri = [Cdat(three_cells2(jj),1);Cdat(three_cells2(jj),2)];
                    two_cells = setdiff(three_cells2,three_cells2(jj));
                    rj = [Cdat(two_cells(1),1);Cdat(two_cells(1),2)];
                    rk = [Cdat(two_cells(2),1);Cdat(two_cells(2),2)];
                    
                    %domega_temp = J_func(ri(1),ri(2),rj(1),rj(2),rk(1),rk(2));
                    i1 = ri(1);
                    i2 = ri(2);
                    j1 = rj(1);
                    j2 = rj(2);
                    k1 = rk(1);
                    k2 = rk(2);
                    
                    D = 2*((i1 - j1)*(j2 - k2) - (i2 - j2)*(j1 - k1))^2;
                    %if D>1
                    domega_temp = [((j2 - k2)*(i1^2*j2 - i1^2*k2 - 2*i1*i2*j1 + 2*i1*i2*k1 + 2*i1*j1*k2 - 2*i1*j2*k1 - i2^2*j2 + i2^2*k2 + i2*j1^2 + i2*j2^2 - i2*k1^2 - i2*k2^2 - j1^2*k2 - j2^2*k2 + j2*k1^2 + j2*k2^2))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2),...
                        -((j1 - k1)*(i1^2*j2 - i1^2*k2 - 2*i1*i2*j1 + 2*i1*i2*k1 + 2*i1*j1*k2 - 2*i1*j2*k1 - i2^2*j2 + i2^2*k2 + i2*j1^2 + i2*j2^2 - i2*k1^2 - i2*k2^2 - j1^2*k2 - j2^2*k2 + j2*k1^2 + j2*k2^2))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2);...
                        -((j2 - k2)*(- i1^2*j1 + i1^2*k1 - 2*i1*i2*j2 + 2*i1*i2*k2 + i1*j1^2 + i1*j2^2 - i1*k1^2 - i1*k2^2 + i2^2*j1 - i2^2*k1 - 2*i2*j1*k2 + 2*i2*j2*k1 - j1^2*k1 + j1*k1^2 + j1*k2^2 - j2^2*k1))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2),...
                        ((j1 - k1)*(- i1^2*j1 + i1^2*k1 - 2*i1*i2*j2 + 2*i1*i2*k2 + i1*j1^2 + i1*j2^2 - i1*k1^2 - i1*k2^2 + i2^2*j1 - i2^2*k1 - 2*i2*j1*k2 + 2*i2*j2*k1 - j1^2*k1 + j1*k1^2 + j1*k2^2 - j2^2*k1))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2)];
                    %end
                    %if  D>1 && ~all(ismember(three_cells,delete_cells))
                    %domega_temp = [(0.5*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*k1*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j1*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i1*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*k1)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (1.0*k1*(j2 - 1.0*k2)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (j1*(j2 - 1.0*k2)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*i1*(j2 - 1.0*k2)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3, (0.5*k2*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j2*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i2*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*k1)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (1.0*k2*(j2 - 1.0*k2)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (j2*(j2 - 1.0*k2)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*i2*(j2 - 1.0*k2)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3; ...
                    %              (0.5*k1*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*j2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*j2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j1*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*k2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*k2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i1*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (k1*(j1 - 1.0*k1)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*j1*(j1 - 1.0*k1)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (i1*(j1 - 1.0*k1)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3,  (0.5*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*k2*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*j2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*j2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j2*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*k2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*k2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i2*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (k2*(j1 - 1.0*k1)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*j2*(j1 - 1.0*k1)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (i2*(j1 - 1.0*k1)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3];
                    
                    %end
                    
                    %              if ~isempty(find(abs(domega_temp)>100))
                    %               ri
                    %               rj
                    %               rk
                    %               D
                    %              end
                    J(three_cells2(jj),ii) = domega_temp(1,1);
                    J(three_cells2(jj),m+ii) = domega_temp(1,2);
                    J(n+three_cells2(jj),ii) = domega_temp(2,1);
                    J(n+three_cells2(jj),m+ii) = domega_temp(2,2);
                end
            end
        else
            
            %t = cputime;
            for jj = 1:3
                
                ri = [Cdat(three_cells(jj),1);Cdat(three_cells(jj),2)];
                two_cells = setdiff(three_cells,three_cells(jj));
                rj = [Cdat(two_cells(1),1);Cdat(two_cells(1),2)];
                rk = [Cdat(two_cells(2),1);Cdat(two_cells(2),2)];
                
                %domega_temp = J_func(ri(1),ri(2),rj(1),rj(2),rk(1),rk(2));
                i1 = ri(1);
                i2 = ri(2);
                j1 = rj(1);
                j2 = rj(2);
                k1 = rk(1);
                k2 = rk(2);
                
                D = 2*((i1 - j1)*(j2 - k2) - (i2 - j2)*(j1 - k1))^2;
                %if D>1
                domega_temp = [((j2 - k2)*(i1^2*j2 - i1^2*k2 - 2*i1*i2*j1 + 2*i1*i2*k1 + 2*i1*j1*k2 - 2*i1*j2*k1 - i2^2*j2 + i2^2*k2 + i2*j1^2 + i2*j2^2 - i2*k1^2 - i2*k2^2 - j1^2*k2 - j2^2*k2 + j2*k1^2 + j2*k2^2))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2),...
                    -((j1 - k1)*(i1^2*j2 - i1^2*k2 - 2*i1*i2*j1 + 2*i1*i2*k1 + 2*i1*j1*k2 - 2*i1*j2*k1 - i2^2*j2 + i2^2*k2 + i2*j1^2 + i2*j2^2 - i2*k1^2 - i2*k2^2 - j1^2*k2 - j2^2*k2 + j2*k1^2 + j2*k2^2))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2);...
                    -((j2 - k2)*(- i1^2*j1 + i1^2*k1 - 2*i1*i2*j2 + 2*i1*i2*k2 + i1*j1^2 + i1*j2^2 - i1*k1^2 - i1*k2^2 + i2^2*j1 - i2^2*k1 - 2*i2*j1*k2 + 2*i2*j2*k1 - j1^2*k1 + j1*k1^2 + j1*k2^2 - j2^2*k1))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2),...
                    ((j1 - k1)*(- i1^2*j1 + i1^2*k1 - 2*i1*i2*j2 + 2*i1*i2*k2 + i1*j1^2 + i1*j2^2 - i1*k1^2 - i1*k2^2 + i2^2*j1 - i2^2*k1 - 2*i2*j1*k2 + 2*i2*j2*k1 - j1^2*k1 + j1*k1^2 + j1*k2^2 - j2^2*k1))/(2*(i1*j2 - i2*j1 - i1*k2 + i2*k1 + j1*k2 - j2*k1)^2)];
                %end
                %if  D>1 && ~all(ismember(three_cells,delete_cells))
                %domega_temp = [(0.5*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*k1*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j1*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i1*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*k1)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (1.0*k1*(j2 - 1.0*k2)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (j1*(j2 - 1.0*k2)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*i1*(j2 - 1.0*k2)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3, (0.5*k2*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*j1)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j2*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i1 - 2.0*k1)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i2*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*k1)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (1.0*k2*(j2 - 1.0*k2)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (j2*(j2 - 1.0*k2)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*i2*(j2 - 1.0*k2)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3; ...
                %              (0.5*k1*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*j2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*j2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j1*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*k2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*k2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i1*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (k1*(j1 - 1.0*k1)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*j1*(j1 - 1.0*k1)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (i1*(j1 - 1.0*k1)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3,  (0.5*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*k2*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*j2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*j2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 - (0.5*j2*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(j2 - 1.0*k2) + (2.0*i2 - 2.0*k2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + (2.0*i2 - 2.0*k2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (0.5*i2*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^2 + (k2*(j1 - 1.0*k1)*(((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i1 - 1.0*k1)*(j1 - 1.0*k1) + ((i1 - 1.0*j1)^2 + (i2 - 1.0*j2)^2)*(i2 - 1.0*k2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 - (1.0*j2*(j1 - 1.0*k1)*(((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(j1 - 1.0*k1) + ((i1 - 1.0*k1)^2 + (i2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(j2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3 + (i2*(j1 - 1.0*k1)*(((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i1 - 1.0*j1)*(i1 - 1.0*k1) + ((j1 - 1.0*k1)^2 + (j2 - 1.0*k2)^2)*(i2 - 1.0*j2)*(i2 - 1.0*k2)))/((i1 - 1.0*j1)*(j2 - 1.0*k2) - 1.0*(i2 - 1.0*j2)*(j1 - 1.0*k1))^3];
                
                %end
                
                %              if ~isempty(find(abs(domega_temp)>100))
                %               ri
                %               rj
                %               rk
                %               D
                %              end
                J(three_cells(jj),ii) = domega_temp(1,1);
                J(three_cells(jj),m+ii) = domega_temp(1,2);
                J(n+three_cells(jj),ii) = domega_temp(2,1);
                J(n+three_cells(jj),m+ii) = domega_temp(2,2);
            end
            %fprintf('J_functions vertices runtime: %f\n',cputime-t)
            
        end
    end
end
J = sparse(J);


end